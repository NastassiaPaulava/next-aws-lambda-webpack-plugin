AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example next-aws-lambda-webpack-plugin


Resources:

  # ---- DISTRIBUTION ----

  Bucket:
    Type: AWS::S3::Bucket

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdEntity.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Join ["",[!GetAtt Bucket.Arn, "/*" ]]

  CloudFrontOriginAccessIdEntity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "access-static-file"

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        PriceClass: PriceClass_100
        Enabled: true
        Origins:
          - Id: !Ref Bucket
            DomainName: !GetAtt Bucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdEntity}"
        DefaultCacheBehavior:
          TargetOriginId: !Ref Bucket
          MaxTTL: 0
          MinTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            QueryString: true
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref CloudfrontRouter.Version

  CloudfrontRouter:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt CloudfrontEdgeRole.Arn
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: router/
      Description: Router
      MemorySize: 128
      Timeout: 1
      AutoPublishAlias: live

  # ---- Role ----

  CloudfrontEdgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: log
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*

Outputs:
  BucketName:
    Description: "S3 bucket name"
    Value: !Ref Bucket
  DistributionDns:
    Description: "Distribution Dns"
    Value: !GetAtt Distribution.DomainName